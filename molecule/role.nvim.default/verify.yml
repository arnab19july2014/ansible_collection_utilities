---
- name: NEOVIM | Molecule | Verify
  hosts: all
  gather_facts: false
  tasks:
    - name: NEOVIM | Molecule | Verify | Import Roles for variables
      ansible.builtin.import_role:
        name: arpanrec.utilities.nvim
        tasks_from: prerequisites

    - name: NEOVIM | Molecule | Verify | Not x86_64
      when: ansible_facts.architecture != "x86_64"
      block:
        - name: NEOVIM | Molecule | Verify | Not x86_64 | which nvim
          ansible.builtin.command: "which nvim"
          changed_when: false
          register: rv_nvim_tmp_package_which_nvim

        - name: NEOVIM | Molecule | Verify | Not x86_64 | which nvim result
          ansible.builtin.debug:
            var: rv_nvim_tmp_package_which_nvim

        - name: NEOVIM | Molecule | Verify | Install | nvim exec path
          ansible.builtin.set_fact:
            rv_nvim_exec_path: "{{ rv_nvim_tmp_package_which_nvim.stdout }}"

    - name: NEOVIM | Molecule | Verify | Get nvim version from shell
      ansible.builtin.command: "{{ rv_nvim_exec_path }} --version"
      environment:
        PATH: "{{ rv_nvim_nodejs_install_path }}/bin:{{ ansible_env.PATH }}"
      register: rv_nvim_tmp_version_shell_result
      changed_when: false

    - name: NEOVIM | Molecule | Verify | code version from shell result
      ansible.builtin.debug:
        var: rv_nvim_tmp_version_shell_result

    - name: NEOVIM | Molecule | Verify | Get latest releases
      when: rv_nvim_version is undefined
      block:
        - name: NEOVIM | Molecule | Verify | Get latest releases | Get from github
          ansible.builtin.uri:
            url: "https://api.github.com/repos/neovim/neovim/releases/latest"
            method: GET
            return_content: true
            headers:
              Accept: "application/vnd.github.v3+json"
            status_code: 200
          register: pv_ua_tmp_td_latest_release

        - name: NEOVIM | Molecule | Verify | Get latest releases | Set version variable
          ansible.builtin.set_fact:
            rv_nvim_version: "{{ pv_ua_tmp_td_latest_release.json.tag_name }}"

    - name: NEOVIM | Molecule | Verify | Fail if code version is not present
      ansible.builtin.assert:
        that: rv_nvim_tmp_version_shell_result.stdout_lines[0] is match("NVIM {{ rv_nvim_version }}")
        success_msg: NEOVIM {{ rv_nvim_version }} is installed
        fail_msg: NEOVIM {{ rv_nvim_version }} is not installed, Shell result {{ rv_nvim_tmp_version_shell_result.stdout }}
