---
- name: Application User | Generate password hash
  ansible.builtin.shell: >
    import crypt;  print(crypt.crypt("{{ rv_user_add_password }}", "$1$SomeSalt$"))
  register: rv_user_add_password_hash_tmp
  args:
    executable: "{{ ansible_python_interpreter }}"
  no_log: true
  when: rv_user_add_password is defined
  changed_when: false

- name: Application User | Adding the group
  ansible.builtin.group:
    name: "{{ rv_user_add_user_primary_group }}"
    gid: "{{ rv_user_add_user_primary_gid | default(omit) }}"
    state: present

- name: Application User | Adding the user
  ansible.builtin.user:
    name: "{{ rv_user_add_username }}"
    shell: "{{ rv_user_add_user_default_shell }}"
    state: present
    groups: "{{ (rv_user_add_user_extra_groups | length > 0) | ternary(rv_user_add_user_extra_groups, omit) }}"
    append: "{{ (rv_user_add_user_extra_groups | length > 0) | ternary(true, omit) }}"
    uid: "{{ rv_user_add_uid | default(omit) }}"
    group: "{{ rv_user_add_user_primary_group }}"
    create_home: true
    home: "{{ rv_user_add_user_home_dir | default(omit, True) }}"
    expires: -1
    password: "{{ rv_user_add_password_hash_tmp.stdout | default(omit) }}"
    update_password: on_create

- name: Application User | Deploying SSH Key
  ansible.posix.authorized_key:
    user: "{{ rv_user_add_username }}"
    key: "{{ item }}"
    state: present
    comment: added by ansible automation
  with_items: "{{ rv_user_add_ssh_access_public_key_content_list }}"
  when:
    - rv_user_add_ssh_access_public_key_content_list is defined
    - rv_user_add_ssh_access_public_key_content_list | length > 0

- name: Application User | Adding user to the sudoers
  when: rv_user_add_user_nopasswd_commands | length > 0
  ansible.builtin.lineinfile:
    path: "{{ rv_user_add_sudoers_file }}"
    line: "{{ rv_user_add_username }} ALL=(ALL) NOPASSWD: {{ item }}"
    create: true
    validate: /usr/sbin/visudo -cf %s
    mode: "0440"
  with_items:
    - "{{ rv_user_add_user_nopasswd_commands }}"
