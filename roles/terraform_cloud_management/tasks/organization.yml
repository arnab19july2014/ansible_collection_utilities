---
- name: Terraform Cloud Management | Organization | Mandatory variable check organization name
  ansible.builtin.fail:
    msg: rl_tef_org_name is not defined
  when: rl_tef_org_name is not defined

- name: Terraform Cloud Management | Organization | Mandatory variable check rl_tef_org_email
  ansible.builtin.fail:
    msg: rl_tef_org_email is not defined
  when: rl_tef_org_email is not defined

- name: Terraform Cloud Management | Organization | Mandatory variable check rl_tef_api_collaborator_auth_policy
  ansible.builtin.fail:
    msg: >
      rl_tef_api_collaborator_auth_policy {{ rl_tef_api_collaborator_auth_policy }} is not proper,
      it should be in [password , two_factor_mandatory]
  when: >
    rl_tef_api_collaborator_auth_policy is defined and rl_tef_api_collaborator_auth_policy is
    not in ["password" , "two_factor_mandatory"]

- name: Terraform Cloud Management | Organization | Reset new org stat
  ansible.builtin.set_fact:
    rl_tef_org_is_newly_created: false

- name: Terraform Cloud Management | Organization | Get organizations
  no_log: "{{ rl_tef_api_debug_no_log }}"
  ansible.builtin.uri:
    url: "{{ rl_tef_api_endpoint }}/organizations/{{ rl_tef_org_name }}"
    headers:
      Authorization: "Bearer {{ rl_tef_api_token }}"
      content-type: "application/vnd.api+json"
    status_code: 200,404
  register: rl_tef_org_details

- name: Terraform Cloud Management | Organization | Create organizations
  when: rl_tef_org_details.status == 404
  block:
    - name: Terraform Cloud Management | Organization | Create organizations | Create new org
      no_log: "{{ rl_tef_api_debug_no_log }}"
      ansible.builtin.uri:
        method: POST
        url: "{{ rl_tef_api_endpoint }}/organizations"
        body_format: json
        body:
          data:
            type: "organizations"
            attributes:
              name: "{{ rl_tef_org_name }}"
              email: "{{ rl_tef_org_email }}"
              collaborator-auth-policy: "{{ rl_tef_api_collaborator_auth_policy | default(omit) }}"
        status_code: 201
        headers:
          Authorization: "Bearer {{ rl_tef_api_token }}"
          content-type: "application/vnd.api+json"
      register: rl_tef_organization_create_response
      changed_when: rl_tef_organization_create_response.status == 201
      failed_when: rl_tef_organization_create_response.status != 201
    - name: Terraform Cloud Management | Organization | Create organizations | Get new organization details
      no_log: "{{ rl_tef_api_debug_no_log }}"
      ansible.builtin.uri:
        url: "{{ rl_tef_api_endpoint }}/organizations/{{ rl_tef_org_name }}"
        headers:
          Authorization: "Bearer {{ rl_tef_api_token }}"
          content-type: "application/vnd.api+json"
        status_code: 200
      register: rl_tef_org_new_org_response
    - name: Terraform Cloud Management | Workspaces | Create workspace | Reset fact with new
      ansible.builtin.set_fact:
        rl_tef_org_details: "{{ rl_tef_org_new_org_response }}"
        rl_tef_org_is_newly_created: true
      when: rl_tef_organization_create_response.changed

- name: Terraform Cloud Management | Organization | Update organization
  when: not rl_tef_org_is_newly_created
  block:
    - name: Terraform Cloud Management | Organization | Update organization | Update email id
      no_log: "{{ rl_tef_api_debug_no_log }}"
      when: (rl_tef_org_email is defined) and rl_tef_org_details.json.data.attributes.email != rl_tef_org_email
      ansible.builtin.uri:
        method: PATCH
        url: "{{ rl_tef_api_endpoint }}/organizations/{{ rl_tef_org_name }}"
        body_format: json
        body:
          data:
            type: "organizations"
            attributes:
              email: "{{ rl_tef_org_email }}"
        status_code: 200
        headers:
          Authorization: "Bearer {{ rl_tef_api_token }}"
          content-type: "application/vnd.api+json"
      register: rl_tef_organization_update_email_response
      changed_when: rl_tef_organization_update_email_response.status == 200
      failed_when: rl_tef_organization_update_email_response.status != 200

    - name: Terraform Cloud Management | Organization | Update organization | Update Authentication Factor
      no_log: "{{ rl_tef_api_debug_no_log }}"
      when: (rl_tef_api_collaborator_auth_policy is defined) and rl_tef_org_details.json.data.attributes["collaborator-auth-policy"] != rl_tef_api_collaborator_auth_policy
      ansible.builtin.uri:
        method: PATCH
        url: "{{ rl_tef_api_endpoint }}/organizations/{{ rl_tef_org_name }}"
        body_format: json
        body:
          data:
            type: "organizations"
            attributes:
              collaborator-auth-policy: "{{ rl_tef_api_collaborator_auth_policy }}"
        status_code: 200
        headers:
          Authorization: "Bearer {{ rl_tef_api_token }}"
          content-type: "application/vnd.api+json"
      register: rl_tef_organization_update_mfa_response
      changed_when: rl_tef_organization_update_mfa_response.status == 200
      failed_when: rl_tef_organization_update_mfa_response.status != 200
